/**
 * Manipolazione di date in formato numerico
 * 14/10/2021
 * Esercizio iniziato da Michele Loreti e continuato da Alessio Rubicini
 */
int anno(int d) {
	return d/10000;
}

int mese(int d) {
	return (d/100)%100;
}

int giorno(int d) {
	return d%100;
}

int giorniMese(int mm, boolean bisestile) {
	switch (mm) {
		case 11:
		case 4:
		case 6:
		case 9:
			return 30;
		case 2:
			if (bisestile) {
				return 29;
			} else {
				return 28;
			}
		default:
			return 31;
	}
}

boolean bisestile(int yyyy) {
	return (yyyy%4==0)&&((yyyy%100!=0)||(yyyy%400==0));
}

boolean corretta(int d) {
	int yyyy = anno(d);
	int mm = mese(d);
	int dd = giorno(d);
	if (yyyy<1900) {
		return false;
	}
	if ((mm<1)||(mm>12)) {
		return false;
	}
	if ((dd<1)||(dd>giorniMese(mm,bisestile(yyyy)))) {
		return false;
	}
	return true;
}


// A partire da anno mese e giorno separati, restituisce la data completa in formato numerico
int data(int anno, int mese, int giorno) {
	return (anno * 10000) + (mese * 100) + (giorno);
}

// Ritorna true se il valore Ã¨ negativo, false altrimenti
boolean negativo(int n) { return (n < 0) ? true : false; }

// Data una data d in formato numerico e un numero n positivo, calcolare la data corrispondente a d+n giorni.
int sommaGiorni(int d, int n) {
	int giorni = giorno(d);
	int mese = mese(d);
	int anno = anno(d);
	int i = 0;
	
	while(i != n) {
		giorni ++;
		if(giorni > giorniMese(mese(d), bisestile(anno(d)))) {
			giorni = 1;
			mese++;
		}
		if(mese > 12) {
			mese = 1;
			anno++;
		}
		i++;
	} 	
	
	return data(anno, mese, giorni);
}

// Data una data d in formato numerico e un numero n positivo, calcolare la data corrispondente a d-n giorni.
int sottraiGiorni(int data, int n) {
	int giorni = giorno(data);
	int mese = mese(data);
	int anno = anno(data);
	int i = 0;
	while(i != n) {
		giorni --;
		if(giorni < 0) {
			mese--;
			giorni = giorniMese(mese, bisestile(anno));
		}
		if(mese < 1) {
			mese = 12;
			anno--;
		}
		i++;
	}	
	return data(anno, mese, giorni);
}

// Data una data in formato numerico somma o sottrae n giorni, a seconda del segno di n stesso
int sommaSottraiGiorni(int data, int n) {
	int giorni = giorno(data);
	int mese = mese(data);
	int anno = anno(data);
	int i = 0;
	while(negativo(n) ? (i != -n) : (i != n)) {
		negativo(n) ? giorni-- : giorni ++;
		if(negativo(n) ? giorni <= 0 : giorni > giorniMese(mese(data), bisestile(anno(data)))) {
			negativo(n) ? mese-- : mese++;
			negativo(n) ? giorni = giorniMese(mese, bisestile(anno)) : giorni = 1;
		}
		if(negativo(n) ? mese < 0 : mese > 12) {
			negativo(n) ? mese = 12 : mese = 1;
			negativo(n) ? anno-- : anno++;
		}
		i++;
	}
	return data(anno, mese, giorni);
}

// Restituisce la data temporalmente maggiore tra le due, altrimenti 0 se sono uguali
int dataMaggiore(int d1, int d2) {
	if(d1 == d2) {
		return 0;
	} else if (anno(d1) > anno(d2) || (anno(d1) == anno(d2) && mese(d1) > mese(d2)) || (anno(d1) == anno(d2) && mese(d1) == mese(d2) && giorno(d1) > giorno(d2))) {
		return d1;
	} else {
		return d2;
	}
}

// Date due date d1 e d2 in formato numerico, determinare la differenza in giorni
int differenzaInGiorni(int d1, int d2) {
	int data = dataMaggiore(d1, d2);
	int dataSottratta = data;
	int i = 0;
	while(dataSottratta != (data == d1 ? d2 : d1)) {
		dataSottratta = sommaSottraiGiorni(dataSottratta, -1);
		i++;
	}
	return i;
}

System.out.println("Giorni di differenza tra il 25/10/2021 e il 02/11/2021 = " + differenzaInGiorni(20211025, 20211102));
